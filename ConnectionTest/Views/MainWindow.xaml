<Window x:Class="ConnectionTest.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
        xmlns:l="http://schemas.livet-mvvm.net/2011/wpf"
        xmlns:v="clr-namespace:ConnectionTest.Views"
        xmlns:vm="clr-namespace:ConnectionTest.ViewModels"
        Title="ConnectionTest" Height="400" Width="600">
    
    <Window.DataContext>
        <vm:MainWindowViewModel/>
    </Window.DataContext>
    
    <i:Interaction.Triggers>
    
    	<!--Viewに特別な要件が存在しない限りは、トリガーやアクションの自作にこだわらず積極的にコードビハインドを使いましょう -->
    	<!--Viewのコードビハインドは、基本的にView内で完結するロジックとViewModelからのイベントの受信(専用リスナを使用する)に限るとトラブルが少なくなります -->
    	<!--Livet1.1からはコードビハインドでViewModelのイベントを受信するためのWeakEventLisnterサポートが追加されています --> 
        
        <!--WindowのContentRenderedイベントのタイミングでViewModelのInitializeメソッドが呼ばれます-->
        <i:EventTrigger EventName="ContentRendered">
            <l:LivetCallMethodAction MethodTarget="{Binding}" MethodName="Initialize"/>
        </i:EventTrigger>

        <!--Windowが閉じたタイミングでViewModelのDisposeメソッドが呼ばれます-->
        <i:EventTrigger EventName="Closed">
            <l:DataContextDisposeAction/>
        </i:EventTrigger>

        <!--WindowのCloseキャンセル処理に対応する場合は、WindowCloseCancelBehaviorの使用を検討してください-->

    </i:Interaction.Triggers>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="200" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>

        <StackPanel Grid.Column="0">
            <Label Content="{Binding Path=StatusConnection}"/>
            <Label Content="ネットワーク アダプタ"/>
            <ComboBox ItemsSource="{Binding Path=Interface}" SelectedIndex="{Binding Path=SlctdInterface}"/>
            <Label Content="自分のIPアドレス"/>
            <StackPanel Orientation="Horizontal">
                <TextBox Text="{Binding Path=Ip0}" Width="40"/>
                <Label Content="."/>
                <TextBox Text="{Binding Path=Ip1}" Width="40"/>
                <Label Content="."/>
                <TextBox Text="{Binding Path=Ip2}" Width="40"/>
                <Label Content="."/>
                <TextBox Text="{Binding Path=Ip3}" Width="40"/>
            </StackPanel>
            <Label Content="自分のサブネットマスク"/>
            <StackPanel Orientation="Horizontal">
                <TextBox Text="{Binding Path=Msk0}" Width="40"/>
                <Label Content="."/>
                <TextBox Text="{Binding Path=Msk1}" Width="40"/>
                <Label Content="."/>
                <TextBox Text="{Binding Path=Msk2}" Width="40"/>
                <Label Content="."/>
                <TextBox Text="{Binding Path=Msk3}" Width="40"/>
            </StackPanel>
            <CheckBox Content="DHCPをONに設定" IsChecked="{Binding Path=EnDhcp}"/>
            <StackPanel Orientation="Horizontal">
                <Button Content="IPの再取得" Command="{Binding Path=RefreshIPCommand}" Width="100"/>
                <Button Content="上記設定に変更" Command="{Binding Path=SetIPCommand}" Width="100"/>
            </StackPanel>
            <Label Content="接続先IPアドレス"/>
            <StackPanel Orientation="Horizontal">
                <TextBox Text="{Binding Path=Ip0dst}" Width="40"/>
                <Label Content="."/>
                <TextBox Text="{Binding Path=Ip1dst}" Width="40"/>
                <Label Content="."/>
                <TextBox Text="{Binding Path=Ip2dst}" Width="40"/>
                <Label Content="."/>
                <TextBox Text="{Binding Path=Ip3dst}" Width="40"/>
            </StackPanel>
            <Button Content="接続チェック(ping)" Command="{Binding Path=PingCommand}"/>
            <Button Content="自分のネットワーク状況確認(ipconfig)" Command="{Binding Path=IpconfigCommand}"/>
            <Button Content="接続可能なIPの確認" Command="{Binding Path=PingAllCommand}"/>
        </StackPanel>
        <TextBox Grid.Column="1" Text="{Binding Path=ResultText}" AcceptsReturn="True" TextWrapping="Wrap" VerticalScrollBarVisibility="Auto" VerticalAlignment="Stretch" FontSize="16"/>
    </Grid>
</Window>
